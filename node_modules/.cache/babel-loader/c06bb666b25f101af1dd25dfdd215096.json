{"ast":null,"code":"import _objectSpread from \"/Users/antoineroy/Documents/tictactoe/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/antoineroy/Documents/tictactoe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/antoineroy/Documents/tictactoe/src/App.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Game() {\n  //players\n  var _useState = useState({\n    playerOne: \"Player 1\",\n    playerTwo: \"Player 2\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      players = _useState2[0],\n      setPlayers = _useState2[1];\n\n  var _useState3 = useState({\n    playerOne: 0,\n    playerTwo: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scores = _useState4[0],\n      setScores = _useState4[1];\n\n  var _useState5 = useState([Array(6).fill(null), Array(6).fill(null), Array(6).fill(null), Array(6).fill(null), Array(6).fill(null), Array(6).fill(null), Array(6).fill(null)]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      board = _useState6[0],\n      setBoard = _useState6[1]; //console.log(board);\n\n\n  function handlePlayerChange(e) {\n    e.preventDefault();\n\n    var nextPlayers = _objectSpread({}, players);\n\n    e.target.name === \"PlayerOne\" ? nextPlayers = _objectSpread({}, players, {\n      playerOne: e.target.value\n    }) : nextPlayers = _objectSpread({}, players, {\n      playerTwo: e.target.value\n    });\n    console.log(nextPlayers);\n    setPlayers(_objectSpread({}, nextPlayers));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Players, {\n    players: players,\n    handlePlayerChange: handlePlayerChange,\n    scores: scores,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Board, {\n    board: board,\n    handleClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n}\n\nfunction handleClick() {\n  console.log(\"nana\");\n}\n\nfunction Board(props) {\n  return React.createElement(\"div\", {\n    className: \"board board-style\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"the Board\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Row, {\n    id: 0,\n    columns: props.board[0],\n    handleClick: props.handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Row, {\n    id: 1,\n    columns: props.board[1],\n    handleClick: props.handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Row, {\n    id: 2,\n    columns: props.board[2],\n    handleClick: props.handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Row, {\n    id: 3,\n    columns: props.board[3],\n    handleClick: props.handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Row, {\n    id: 4,\n    columns: props.board[4],\n    handleClick: props.handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Row, {\n    id: 5,\n    columns: props.board[5],\n    handleClick: props.handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Row, {\n    id: 5,\n    columns: props.board[6],\n    handleClick: props.handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })));\n}\n\nfunction Row(props) {\n  return React.createElement(\"button\", {\n    className: \"row\",\n    onclick: function onclick() {\n      return handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.id, React.createElement(Columns, {\n    id: 0,\n    column: props.columns[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Columns, {\n    id: 1,\n    column: props.columns[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Columns, {\n    id: 2,\n    column: props.columns[2],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Columns, {\n    id: 3,\n    column: props.columns[3],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Columns, {\n    id: 4,\n    column: props.columns[4],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Columns, {\n    id: 5,\n    column: props.columns[5],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n}\n\nfunction Columns(props) {\n  console.log(props.column);\n  return React.createElement(\"div\", {\n    className: \"column shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, props.id);\n} //Players\n\n\nfunction Players(props) {\n  return React.createElement(\"div\", {\n    className: \"players\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    label: \"Player 1\",\n    type: \"text\",\n    name: \"PlayerOne\",\n    onChange: props.handlePlayerChange,\n    value: props.players.playerOne,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    label: \"Player 2\",\n    type: \"text\",\n    name: \"PlayerTwo\",\n    onChange: props.handlePlayerChange,\n    value: props.players.playerTwo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"scores\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, props.players.playerOne, \" VS \", props.players.playerTwo), React.createElement(\"p\", {\n    className: \"scores\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, props.scores.playerOne, \" - \", props.scores.playerTwo));\n}\n\nexport default Game;\n/*function Game() {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [historySquares, setHistorySquares] = useState(Array(9).fill(null));\n  const [OisNext, setOisNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [scores, setScores] = useState([0, 0]);\n  const [history, setHistory] = useState([]);\n\n  function renderSquare(i) {\n    return <Square value={squares[i]} onClick={handleClick} />;\n    function handleClick() {\n      if (winner === null) {\n        const nextSquares = squares.slice();\n        if (nextSquares[i] === null) {\n          nextSquares[i] = OisNext ? \"X\" : \"O\";\n        } else {\n          return;\n        }\n        setSquares(nextSquares);\n        setOisNext(!OisNext);\n        console.log(squares);\n      } else {\n        return;\n      }\n    }\n  }\n\n  function renderHistorySquare(x) {\n    return <historySquare value={historySquares[x]} />;\n  }\n\n  useEffect(() => {\n    function calculateWinner(squares) {\n      const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n      ];\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (\n          squares[a] &&\n          squares[a] === squares[b] &&\n          squares[a] === squares[c]\n        ) {\n          console.log(\"WINNER!\");\n          setWinner(squares[a]);\n        }\n      }\n      console.log(\"NO WINNER\");\n      return;\n    }\n    calculateWinner(squares);\n    if (winner !== null) {\n      let nextHistory = history.slice();\n      nextHistory.push([squares]);\n      setHistory(nextHistory);\n      console.log(\"HISTORY IN CW \" + history);\n\n      console.log(\"HISTORY\" + history.length + history[0]);\n      let nextScores = scores.slice();\n      winner === \"X\" ? (nextScores[0] += 1) : (nextScores[1] += 1);\n      setScores(nextScores);\n      setWinner(null);\n      setSquares(Array(9).fill(null));\n    } else if (squares.includes(null) === false) {\n      setSquares(Array(9).fill(null));\n      return;\n    }\n    return console.log(\"useffect calculate winner unmount\");\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          squares={squares}\n          setSquares={setSquares}\n          historySquares={historySquares}\n          setHistorySquares={setHistorySquares}\n          OisNext={OisNext}\n          setOisNext={setOisNext}\n          winner={winner}\n          setWinner={setWinner}\n          scores={scores}\n          setScores={setScores}\n          history={history}\n          setHistory={setHistory}\n          renderSquare={renderSquare}\n        />\n      </div>\n      <div className=\"history-board\">\n        <HistoryBoard\n          historySquares={historySquares}\n          winner={winner}\n          history={history}\n          renderHistorySquare={renderHistorySquare}\n        />\n      </div>\n      <div className=\"game-info\">\n        <div />\n        <ol />\n      </div>\n    </div>\n  );\n}\nfunction createHistory(history){\n  for (let i = 0; i < history.length; i++) {\n    <div id={i}>\n      <div className=\"board-row\">\n        {props.renderHistorySquare(props.history[i][0])}\n        {props.renderHistorySquare(props.history[i][1])}\n        {props.renderHistorySquare(props.history[i][2])}\n      </div>\n      <div className=\"board-row\">\n        {props.renderHistorySquare(props.history[i][3])}\n        {props.renderHistorySquare(props.history[i][4])}\n        {props.renderHistorySquare(props.history[i][5])}\n      </div>\n      <div className=\"board-row\">\n        {props.renderHistorySquare(props.history[i][6])}\n        {props.renderHistorySquare(props.history[i][7])}\n        {props.renderHistorySquare(props.history[i][8])}\n      </div>\n    </div>\n\n  }\n}\nfunction HistoryBoard(props) {\n  if (props.history.length === 0) {\n    return <div>History</div>;\n  } else {\n    console.log(\"my history \" + props.history[0]);\n    return(\n    );\n  }\n}\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\nfunction historySquare(value) {\n  return <button className=\"square\">{value}</button>;\n}\n\nfunction Board(props) {\n  function declareTurn() {\n    return props.OisNext ? <p>Your turn X</p> : <p>Your turn O</p>;\n  }\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"game-container\">\n        <div className=\"scores\">\n          <h1>Scores</h1>\n          <p>\n            X : {props.scores[0]} - O : {props.scores[1]}\n          </p>\n        </div>\n        <div className=\"status\">{declareTurn()} </div>\n        <div className=\"board-row\">\n          {props.renderSquare(0)}\n          {props.renderSquare(1)}\n          {props.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {props.renderSquare(3)}\n          {props.renderSquare(4)}\n          {props.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {props.renderSquare(6)}\n          {props.renderSquare(7)}\n          {props.renderSquare(8)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n\n/*import React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board(props) {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [OisNext, setOisNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [scores, setScores] = useState([0, 0]);\n\n  function renderSquare(i) {\n    return (\n      <Square\n        value={squares[i]}\n        onClick={() => {\n          if (winner === null) {\n            const nextSquares = squares.slice();\n            if (nextSquares[i] === null) {\n              nextSquares[i] = OisNext ? \"X\" : \"O\";\n            } else {\n              return;\n            }\n            setSquares(nextSquares);\n            setOisNext(!OisNext);\n            console.log(squares);\n          } else {\n            return;\n          }\n        }}\n      />\n    );\n  }\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        console.log(\"WINNER!\");\n        setWinner(squares[a]);\n      }\n    }\n    console.log(\"NO WINNER\");\n    return;\n  }\n\n  function declareTurn() {\n    return OisNext ? <p>Your turn X</p> : <p>Your turn O</p>;\n  }\n  useEffect(() => {\n    calculateWinner(squares);\n    if (winner !== null) {\n      if (props.history.length === 0) {\n        props.setHistory(squares);\n      } else {\n        props.setHistory(props.history + squares);\n      }\n\n      console.log(\"HISTORY\" + props.history.length + props.history[0]);\n      let nextScores = scores.slice();\n      winner === \"X\" ? (nextScores[0] += 1) : (nextScores[1] += 1);\n      setScores(nextScores);\n      setWinner(null);\n      setSquares(Array(9).fill(null));\n    } else if (squares.includes(null) === false) {\n      setSquares(Array(9).fill(null));\n      return;\n    }\n  });\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"game-container\">\n        <div className=\"scores\">\n          <h1>Scores</h1>\n          <p>\n            X : {scores[0]} - O : {scores[1]}\n          </p>\n        </div>\n        <div className=\"status\">{declareTurn()} </div>\n        <div className=\"board-row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Game() {\n  const [history, setHistory] = useState([]);\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board history={history} setHistory={setHistory} />\n      </div>\n      <div className=\"game-info\">\n        <div />\n        <ol />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;*/","map":{"version":3,"sources":["/Users/antoineroy/Documents/tictactoe/src/App.js"],"names":["React","useState","useContext","useEffect","Game","playerOne","playerTwo","players","setPlayers","scores","setScores","Array","fill","board","setBoard","handlePlayerChange","e","preventDefault","nextPlayers","target","name","value","console","log","handleClick","Board","props","Row","id","columns","Columns","column","Players"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Game() {\n  //players\n\n  const [players, setPlayers] = useState({\n    playerOne: \"Player 1\",\n    playerTwo: \"Player 2\"\n  });\n  const [scores, setScores] = useState({ playerOne: 0, playerTwo: 0 });\n  const [board, setBoard] = useState([\n    Array(6).fill(null),\n    Array(6).fill(null),\n    Array(6).fill(null),\n    Array(6).fill(null),\n    Array(6).fill(null),\n    Array(6).fill(null),\n    Array(6).fill(null)\n  ]);\n  //console.log(board);\n\n  function handlePlayerChange(e) {\n    e.preventDefault();\n    let nextPlayers = { ...players };\n    e.target.name === \"PlayerOne\"\n      ? (nextPlayers = { ...players, playerOne: e.target.value })\n      : (nextPlayers = { ...players, playerTwo: e.target.value });\n    console.log(nextPlayers);\n    setPlayers({ ...nextPlayers });\n  }\n\n  return (\n    <div>\n      <div>\n        <Players\n          players={players}\n          handlePlayerChange={handlePlayerChange}\n          scores={scores}\n        />\n      </div>\n      <div>\n        <Board board={board} handleClick={handleClick} />\n      </div>\n    </div>\n  );\n}\nfunction handleClick() {\n  console.log(\"nana\");\n}\nfunction Board(props) {\n  return (\n    <div className=\"board board-style\">\n      <p>the Board</p>\n      <div>\n        <Row id={0} columns={props.board[0]} handleClick={props.handleClick} />\n        <Row id={1} columns={props.board[1]} handleClick={props.handleClick} />\n        <Row id={2} columns={props.board[2]} handleClick={props.handleClick} />\n        <Row id={3} columns={props.board[3]} handleClick={props.handleClick} />\n        <Row id={4} columns={props.board[4]} handleClick={props.handleClick} />\n        <Row id={5} columns={props.board[5]} handleClick={props.handleClick} />\n        <Row id={5} columns={props.board[6]} handleClick={props.handleClick} />\n      </div>\n    </div>\n  );\n}\n\nfunction Row(props) {\n  return (\n    <button className=\"row\" onclick={() => handleClick()}>\n      {props.id}\n      <Columns id={0} column={props.columns[0]} />\n      <Columns id={1} column={props.columns[1]} />\n      <Columns id={2} column={props.columns[2]} />\n      <Columns id={3} column={props.columns[3]} />\n      <Columns id={4} column={props.columns[4]} />\n      <Columns id={5} column={props.columns[5]} />\n    </button>\n  );\n}\nfunction Columns(props) {\n  console.log(props.column);\n  return <div className=\"column shadow\">{props.id}</div>;\n}\n\n//Players\nfunction Players(props) {\n  return (\n    <div className=\"players\">\n      <input\n        label=\"Player 1\"\n        type=\"text\"\n        name=\"PlayerOne\"\n        onChange={props.handlePlayerChange}\n        value={props.players.playerOne}\n      />\n      <input\n        label=\"Player 2\"\n        type=\"text\"\n        name=\"PlayerTwo\"\n        onChange={props.handlePlayerChange}\n        value={props.players.playerTwo}\n      />\n      <p className=\"scores\">\n        {props.players.playerOne} VS {props.players.playerTwo}\n      </p>\n      <p className=\"scores\">\n        {props.scores.playerOne} - {props.scores.playerTwo}\n      </p>\n    </div>\n  );\n}\n\nexport default Game;\n\n/*function Game() {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [historySquares, setHistorySquares] = useState(Array(9).fill(null));\n  const [OisNext, setOisNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [scores, setScores] = useState([0, 0]);\n  const [history, setHistory] = useState([]);\n\n  function renderSquare(i) {\n    return <Square value={squares[i]} onClick={handleClick} />;\n    function handleClick() {\n      if (winner === null) {\n        const nextSquares = squares.slice();\n        if (nextSquares[i] === null) {\n          nextSquares[i] = OisNext ? \"X\" : \"O\";\n        } else {\n          return;\n        }\n        setSquares(nextSquares);\n        setOisNext(!OisNext);\n        console.log(squares);\n      } else {\n        return;\n      }\n    }\n  }\n\n  function renderHistorySquare(x) {\n    return <historySquare value={historySquares[x]} />;\n  }\n\n  useEffect(() => {\n    function calculateWinner(squares) {\n      const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n      ];\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (\n          squares[a] &&\n          squares[a] === squares[b] &&\n          squares[a] === squares[c]\n        ) {\n          console.log(\"WINNER!\");\n          setWinner(squares[a]);\n        }\n      }\n      console.log(\"NO WINNER\");\n      return;\n    }\n    calculateWinner(squares);\n    if (winner !== null) {\n      let nextHistory = history.slice();\n      nextHistory.push([squares]);\n      setHistory(nextHistory);\n      console.log(\"HISTORY IN CW \" + history);\n\n      console.log(\"HISTORY\" + history.length + history[0]);\n      let nextScores = scores.slice();\n      winner === \"X\" ? (nextScores[0] += 1) : (nextScores[1] += 1);\n      setScores(nextScores);\n      setWinner(null);\n      setSquares(Array(9).fill(null));\n    } else if (squares.includes(null) === false) {\n      setSquares(Array(9).fill(null));\n      return;\n    }\n    return console.log(\"useffect calculate winner unmount\");\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          squares={squares}\n          setSquares={setSquares}\n          historySquares={historySquares}\n          setHistorySquares={setHistorySquares}\n          OisNext={OisNext}\n          setOisNext={setOisNext}\n          winner={winner}\n          setWinner={setWinner}\n          scores={scores}\n          setScores={setScores}\n          history={history}\n          setHistory={setHistory}\n          renderSquare={renderSquare}\n        />\n      </div>\n      <div className=\"history-board\">\n        <HistoryBoard\n          historySquares={historySquares}\n          winner={winner}\n          history={history}\n          renderHistorySquare={renderHistorySquare}\n        />\n      </div>\n      <div className=\"game-info\">\n        <div />\n        <ol />\n      </div>\n    </div>\n  );\n}\nfunction createHistory(history){\n  for (let i = 0; i < history.length; i++) {\n    <div id={i}>\n      <div className=\"board-row\">\n        {props.renderHistorySquare(props.history[i][0])}\n        {props.renderHistorySquare(props.history[i][1])}\n        {props.renderHistorySquare(props.history[i][2])}\n      </div>\n      <div className=\"board-row\">\n        {props.renderHistorySquare(props.history[i][3])}\n        {props.renderHistorySquare(props.history[i][4])}\n        {props.renderHistorySquare(props.history[i][5])}\n      </div>\n      <div className=\"board-row\">\n        {props.renderHistorySquare(props.history[i][6])}\n        {props.renderHistorySquare(props.history[i][7])}\n        {props.renderHistorySquare(props.history[i][8])}\n      </div>\n    </div>\n\n  }\n}\nfunction HistoryBoard(props) {\n  if (props.history.length === 0) {\n    return <div>History</div>;\n  } else {\n    console.log(\"my history \" + props.history[0]);\n    return(\n    );\n  }\n}\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\nfunction historySquare(value) {\n  return <button className=\"square\">{value}</button>;\n}\n\nfunction Board(props) {\n  function declareTurn() {\n    return props.OisNext ? <p>Your turn X</p> : <p>Your turn O</p>;\n  }\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"game-container\">\n        <div className=\"scores\">\n          <h1>Scores</h1>\n          <p>\n            X : {props.scores[0]} - O : {props.scores[1]}\n          </p>\n        </div>\n        <div className=\"status\">{declareTurn()} </div>\n        <div className=\"board-row\">\n          {props.renderSquare(0)}\n          {props.renderSquare(1)}\n          {props.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {props.renderSquare(3)}\n          {props.renderSquare(4)}\n          {props.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {props.renderSquare(6)}\n          {props.renderSquare(7)}\n          {props.renderSquare(8)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n\n/*import React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board(props) {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [OisNext, setOisNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [scores, setScores] = useState([0, 0]);\n\n  function renderSquare(i) {\n    return (\n      <Square\n        value={squares[i]}\n        onClick={() => {\n          if (winner === null) {\n            const nextSquares = squares.slice();\n            if (nextSquares[i] === null) {\n              nextSquares[i] = OisNext ? \"X\" : \"O\";\n            } else {\n              return;\n            }\n            setSquares(nextSquares);\n            setOisNext(!OisNext);\n            console.log(squares);\n          } else {\n            return;\n          }\n        }}\n      />\n    );\n  }\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        console.log(\"WINNER!\");\n        setWinner(squares[a]);\n      }\n    }\n    console.log(\"NO WINNER\");\n    return;\n  }\n\n  function declareTurn() {\n    return OisNext ? <p>Your turn X</p> : <p>Your turn O</p>;\n  }\n  useEffect(() => {\n    calculateWinner(squares);\n    if (winner !== null) {\n      if (props.history.length === 0) {\n        props.setHistory(squares);\n      } else {\n        props.setHistory(props.history + squares);\n      }\n\n      console.log(\"HISTORY\" + props.history.length + props.history[0]);\n      let nextScores = scores.slice();\n      winner === \"X\" ? (nextScores[0] += 1) : (nextScores[1] += 1);\n      setScores(nextScores);\n      setWinner(null);\n      setSquares(Array(9).fill(null));\n    } else if (squares.includes(null) === false) {\n      setSquares(Array(9).fill(null));\n      return;\n    }\n  });\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"game-container\">\n        <div className=\"scores\">\n          <h1>Scores</h1>\n          <p>\n            X : {scores[0]} - O : {scores[1]}\n          </p>\n        </div>\n        <div className=\"status\">{declareTurn()} </div>\n        <div className=\"board-row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Game() {\n  const [history, setHistory] = useState([]);\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board history={history} setHistory={setHistory} />\n      </div>\n      <div className=\"game-info\">\n        <div />\n        <ol />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;*/\n"]},"metadata":{},"sourceType":"module"}