{"ast":null,"code":"import _slicedToArray from \"/Users/antoineroy/Documents/tictactoe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/antoineroy/Documents/tictactoe/src/App.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Game() {\n  var _useState = useState(Array(9).fill(null)),\n      _useState2 = _slicedToArray(_useState, 2),\n      squares = _useState2[0],\n      setSquares = _useState2[1];\n\n  var _useState3 = useState(Array(9).fill(null)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      historySquares = _useState4[0],\n      setHistorySquares = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      OisNext = _useState6[0],\n      setOisNext = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      winner = _useState8[0],\n      setWinner = _useState8[1];\n\n  var _useState9 = useState([0, 0]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      scores = _useState10[0],\n      setScores = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      history = _useState12[0],\n      setHistory = _useState12[1];\n\n  function renderSquare(i) {\n    return React.createElement(Square, {\n      value: squares[i],\n      onClick: function onClick() {\n        if (winner === null) {\n          var nextSquares = squares.slice();\n\n          if (nextSquares[i] === null) {\n            nextSquares[i] = OisNext ? \"X\" : \"O\";\n          } else {\n            return;\n          }\n\n          setSquares(nextSquares);\n          setOisNext(!OisNext);\n          console.log(squares);\n        } else {\n          return;\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n\n  useEffect(function () {\n    function calculateWinner(squares) {\n      var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (var i = 0; i < lines.length; i++) {\n        var _lines$i = _slicedToArray(lines[i], 3),\n            a = _lines$i[0],\n            b = _lines$i[1],\n            c = _lines$i[2];\n\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          console.log(\"WINNER!\");\n          setWinner(squares[a]);\n        }\n      }\n\n      console.log(\"NO WINNER\");\n      return;\n    }\n\n    calculateWinner(squares);\n\n    if (winner !== null) {\n      if (history.length === 0) {\n        setHistory(squares);\n      } else {\n        setHistory(history + squares);\n      }\n\n      console.log(\"HISTORY\" + history.length + history[0]);\n      var nextScores = scores.slice();\n      winner === \"X\" ? nextScores[0] += 1 : nextScores[1] += 1;\n      setScores(nextScores);\n      setWinner(null);\n      setSquares(Array(9).fill(null));\n    } else if (squares.includes(null) === false) {\n      setSquares(Array(9).fill(null));\n      return;\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"game-board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Board, {\n    squares: squares,\n    setSquares: setSquares,\n    historySquares: historySquares,\n    setHistorySquares: setHistorySquares,\n    OisNext: OisNext,\n    setOisNext: setOisNext,\n    winner: winner,\n    setWinner: setWinner,\n    scores: scores,\n    setScores: setScores,\n    history: history,\n    setHistory: setHistory,\n    renderSquare: renderSquare,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"history-board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(HistoryBoard, {\n    historySquares: historySquares,\n    winner: winner,\n    history: history,\n    renderSquare: renderSquare,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"game-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })));\n}\n\nfunction HistoryBoard(props) {\n  props.history.map(function (squares) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, props.renderSquare(0), props.renderSquare(1), props.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, props.renderSquare(3), props.renderSquare(4), props.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, props.renderSquare(6), props.renderSquare(7), props.renderSquare(8)));\n  });\n}\n\nfunction Square(_ref) {\n  var value = _ref.value,\n      onClick = _ref.onClick;\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, value);\n}\n\nfunction Board(props) {\n  function declareTurn() {\n    return props.OisNext ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Your turn X\") : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Your turn O\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"game-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"scores\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Scores\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"X : \", props.scores[0], \" - O : \", props.scores[1])), React.createElement(\"div\", {\n    className: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, declareTurn(), \" \"), React.createElement(\"div\", {\n    className: \"board-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), React.createElement(\"div\", {\n    className: \"board-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), React.createElement(\"div\", {\n    className: \"board-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, renderSquare(6), renderSquare(7), renderSquare(8))));\n}\n\nexport default Game;\n/*import React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board(props) {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [OisNext, setOisNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [scores, setScores] = useState([0, 0]);\n\n  function renderSquare(i) {\n    return (\n      <Square\n        value={squares[i]}\n        onClick={() => {\n          if (winner === null) {\n            const nextSquares = squares.slice();\n            if (nextSquares[i] === null) {\n              nextSquares[i] = OisNext ? \"X\" : \"O\";\n            } else {\n              return;\n            }\n            setSquares(nextSquares);\n            setOisNext(!OisNext);\n            console.log(squares);\n          } else {\n            return;\n          }\n        }}\n      />\n    );\n  }\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        console.log(\"WINNER!\");\n        setWinner(squares[a]);\n      }\n    }\n    console.log(\"NO WINNER\");\n    return;\n  }\n\n  function declareTurn() {\n    return OisNext ? <p>Your turn X</p> : <p>Your turn O</p>;\n  }\n  useEffect(() => {\n    calculateWinner(squares);\n    if (winner !== null) {\n      if (props.history.length === 0) {\n        props.setHistory(squares);\n      } else {\n        props.setHistory(props.history + squares);\n      }\n\n      console.log(\"HISTORY\" + props.history.length + props.history[0]);\n      let nextScores = scores.slice();\n      winner === \"X\" ? (nextScores[0] += 1) : (nextScores[1] += 1);\n      setScores(nextScores);\n      setWinner(null);\n      setSquares(Array(9).fill(null));\n    } else if (squares.includes(null) === false) {\n      setSquares(Array(9).fill(null));\n      return;\n    }\n  });\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"game-container\">\n        <div className=\"scores\">\n          <h1>Scores</h1>\n          <p>\n            X : {scores[0]} - O : {scores[1]}\n          </p>\n        </div>\n        <div className=\"status\">{declareTurn()} </div>\n        <div className=\"board-row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Game() {\n  const [history, setHistory] = useState([]);\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board history={history} setHistory={setHistory} />\n      </div>\n      <div className=\"game-info\">\n        <div />\n        <ol />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;*/","map":{"version":3,"sources":["/Users/antoineroy/Documents/tictactoe/src/App.js"],"names":["React","useState","useContext","useEffect","Game","Array","fill","squares","setSquares","historySquares","setHistorySquares","OisNext","setOisNext","winner","setWinner","scores","setScores","history","setHistory","renderSquare","i","nextSquares","slice","console","log","calculateWinner","lines","length","a","b","c","nextScores","includes","HistoryBoard","props","map","Square","value","onClick","Board","declareTurn"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Game() {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [historySquares, setHistorySquares] = useState(Array(9).fill(null));\n  const [OisNext, setOisNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [scores, setScores] = useState([0, 0]);\n  const [history, setHistory] = useState([]);\n\n  function renderSquare(i) {\n    return (\n      <Square\n        value={squares[i]}\n        onClick={() => {\n          if (winner === null) {\n            const nextSquares = squares.slice();\n            if (nextSquares[i] === null) {\n              nextSquares[i] = OisNext ? \"X\" : \"O\";\n            } else {\n              return;\n            }\n            setSquares(nextSquares);\n            setOisNext(!OisNext);\n            console.log(squares);\n          } else {\n            return;\n          }\n        }}\n      />\n    );\n  }\n\n  useEffect(() => {\n    function calculateWinner(squares) {\n      const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n      ];\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (\n          squares[a] &&\n          squares[a] === squares[b] &&\n          squares[a] === squares[c]\n        ) {\n          console.log(\"WINNER!\");\n          setWinner(squares[a]);\n        }\n      }\n      console.log(\"NO WINNER\");\n      return;\n    }\n    calculateWinner(squares);\n    if (winner !== null) {\n      if (history.length === 0) {\n        setHistory(squares);\n      } else {\n        setHistory(history + squares);\n      }\n\n      console.log(\"HISTORY\" + history.length + history[0]);\n      let nextScores = scores.slice();\n      winner === \"X\" ? (nextScores[0] += 1) : (nextScores[1] += 1);\n      setScores(nextScores);\n      setWinner(null);\n      setSquares(Array(9).fill(null));\n    } else if (squares.includes(null) === false) {\n      setSquares(Array(9).fill(null));\n      return;\n    }\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          squares={squares}\n          setSquares={setSquares}\n          historySquares={historySquares}\n          setHistorySquares={setHistorySquares}\n          OisNext={OisNext}\n          setOisNext={setOisNext}\n          winner={winner}\n          setWinner={setWinner}\n          scores={scores}\n          setScores={setScores}\n          history={history}\n          setHistory={setHistory}\n          renderSquare={renderSquare}\n        />\n      </div>\n      <div className=\"history-board\">\n        <HistoryBoard\n          historySquares={historySquares}\n          winner={winner}\n          history={history}\n          renderSquare={renderSquare}\n        />\n      </div>\n      <div className=\"game-info\">\n        <div />\n        <ol />\n      </div>\n    </div>\n  );\n}\nfunction HistoryBoard(props) {\n  props.history.map(squares => {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {props.renderSquare(0)}\n          {props.renderSquare(1)}\n          {props.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {props.renderSquare(3)}\n          {props.renderSquare(4)}\n          {props.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {props.renderSquare(6)}\n          {props.renderSquare(7)}\n          {props.renderSquare(8)}\n        </div>\n      </div>\n    );\n  });\n}\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board(props) {\n  function declareTurn() {\n    return props.OisNext ? <p>Your turn X</p> : <p>Your turn O</p>;\n  }\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"game-container\">\n        <div className=\"scores\">\n          <h1>Scores</h1>\n          <p>\n            X : {props.scores[0]} - O : {props.scores[1]}\n          </p>\n        </div>\n        <div className=\"status\">{declareTurn()} </div>\n        <div className=\"board-row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n\n/*import React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board(props) {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [OisNext, setOisNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [scores, setScores] = useState([0, 0]);\n\n  function renderSquare(i) {\n    return (\n      <Square\n        value={squares[i]}\n        onClick={() => {\n          if (winner === null) {\n            const nextSquares = squares.slice();\n            if (nextSquares[i] === null) {\n              nextSquares[i] = OisNext ? \"X\" : \"O\";\n            } else {\n              return;\n            }\n            setSquares(nextSquares);\n            setOisNext(!OisNext);\n            console.log(squares);\n          } else {\n            return;\n          }\n        }}\n      />\n    );\n  }\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        console.log(\"WINNER!\");\n        setWinner(squares[a]);\n      }\n    }\n    console.log(\"NO WINNER\");\n    return;\n  }\n\n  function declareTurn() {\n    return OisNext ? <p>Your turn X</p> : <p>Your turn O</p>;\n  }\n  useEffect(() => {\n    calculateWinner(squares);\n    if (winner !== null) {\n      if (props.history.length === 0) {\n        props.setHistory(squares);\n      } else {\n        props.setHistory(props.history + squares);\n      }\n\n      console.log(\"HISTORY\" + props.history.length + props.history[0]);\n      let nextScores = scores.slice();\n      winner === \"X\" ? (nextScores[0] += 1) : (nextScores[1] += 1);\n      setScores(nextScores);\n      setWinner(null);\n      setSquares(Array(9).fill(null));\n    } else if (squares.includes(null) === false) {\n      setSquares(Array(9).fill(null));\n      return;\n    }\n  });\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"game-container\">\n        <div className=\"scores\">\n          <h1>Scores</h1>\n          <p>\n            X : {scores[0]} - O : {scores[1]}\n          </p>\n        </div>\n        <div className=\"status\">{declareTurn()} </div>\n        <div className=\"board-row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Game() {\n  const [history, setHistory] = useState([]);\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board history={history} setHistory={setHistory} />\n      </div>\n      <div className=\"game-info\">\n        <div />\n        <ol />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;*/\n"]},"metadata":{},"sourceType":"module"}